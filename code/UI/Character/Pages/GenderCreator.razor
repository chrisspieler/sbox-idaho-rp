@using System;
@using Sandbox;
@using Sandbox.UI;
@using IdahoRP.Api;

@namespace IdahoRP.UI
@inherits IdahoRP.UI.Modal;

<root>
    <div id="topSection">
        <h2>Gender Settings</h2>
        <div class="hr"/>
        <div id="nameSection">
            <h3>Gender Name</h3>
            <TextEntry @ref=GenderNameEntry/>
        </div>

        <div id="isPluralSection">
            <div id="isPluralRow">
                <h3>Subject Is Plural</h3>
                <Checkbox @ref=IsPluralCheckbox/>
            </div>
            <p>Determines whether plural verb conjugation is used for subject pronouns.</p>
        </div>
    </div>
    <div id="pronounSection" class="panel">
        <PronounType @ref=SubjectPronounPanel PronounName="Subject Pronoun"/>
        <PronounType @ref=ObjectPronounPanel PronounName="Object Pronoun"/>
        <PronounType @ref=ReflexivePronounPanel PronounName="Reflexive Pronoun"/>
        <PronounType @ref=PosessiveAdjectivePanel PronounName="Posessive Adjective"/>
        <PronounType @ref=PosessivePronounPanel PronounName="Posessive Pronoun"/>
    </div>
    <div id="buttonRow">
        <button class="solid">
            <div class="icon">delete</div>
            <h3>Delete</h3>
        </button>
    </div>
</root>

@code {
    public Gender CurrentGender 
    {
        get => _currentGender;
        set
        {
            _currentGender = value;
            // If the UI is initialized...
            if (GenderNameEntry != null)
                PopulateFields(value);
        }
    }
    private Gender _currentGender;
    public TextEntry GenderNameEntry { get; set; }
    public Checkbox IsPluralCheckbox { get; set; }
    public PronounType SubjectPronounPanel { get; set;}
    public PronounType ObjectPronounPanel { get; set; }
    public PronounType ReflexivePronounPanel { get; set; }
    public PronounType PosessiveAdjectivePanel { get; set; }
    public PronounType PosessivePronounPanel { get; set; }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (!firstTime)
            return;

        if (CurrentGender != null)
        {
            PopulateFields(CurrentGender);
        }
    }

    public void PopulateFields(Gender gender)
    {
        GenderNameEntry.Text = gender.Name;
        IsPluralCheckbox.Checked = gender.SubjectIsPlural;
        SubjectPronounPanel.Pronoun = gender.SubjectPronoun;
        SubjectPronounPanel.ExampleString = "{0} an interesting person.";
        string subjectVerb = gender.GetSubjectVerb("is", "are");
        SubjectPronounPanel.ExamplePronoun = p => $"{p.ToCapitalized()} {subjectVerb}";
        ObjectPronounPanel.Pronoun = gender.ObjectPronoun;
        ObjectPronounPanel.ExampleString = "I'd really like to meet {0}.";
        ReflexivePronounPanel.Pronoun = gender.ReflexivePronoun;
        ReflexivePronounPanel.ExampleString = "It looks like (name) is rather pleased with {0}.";
        PosessiveAdjectivePanel.Pronoun = gender.PosessiveAdjective;
        PosessiveAdjectivePanel.ExampleString = "It is {0} prerogative.";
        PosessivePronounPanel.Pronoun = gender.PosessivePronoun;
        PosessivePronounPanel.ExampleString = "The pleasure is all {0}.";
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(GenderNameEntry?.Text, IsPluralCheckbox?.Checked);
    }
}